name: Deploy Repo with Metadata

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 确保获取完整提交历史

      - name: Generate metadata
        run: |
          # 执行元数据生成脚本
          chmod +x ./generate_packages.sh
          ./generate_packages.sh
          
          # 验证元数据文件存在
          if [ ! -f Packages ] || [ ! -f Release ]; then
            echo "::error::关键元数据文件未生成！"
            exit 1
          fi

      - name: Prepare deployment artifact
        run: |
          # 创建干净的部署目录
          mkdir -p gh-pages
          
          # 复制网页核心文件
          cp index.html gh-pages/
          
          # 复制静态资源（强制校验存在性）
          for dir in js icon images sileodepiction; do
            if [ -d "$dir" ]; then
              cp -r "$dir" gh-pages/
            else
              echo "::warning::目录 '$dir' 不存在，跳过复制"
            fi
          done
          
          # 复制元数据文件
          cp Packages* Release gh-pages/
          
          # 验证部署包结构
          echo "最终部署结构："
          ls -lR gh-pages/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'gh-pages'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
